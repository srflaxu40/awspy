#!/usr/bin/env python

from boto import ec2
import sys, getopt, re



def main():

    try:
        opts, args = getopt.getopt(sys.argv[1:], "hs:a:k:d", ["help", "snaps=", "amis=", "keep="])
    except getopt.GetoptError as err:
        print(err)
        usage()
        sys.exit(2)

    snaps = None
    amis  = False
    keep  = 0
    dry_run = False

    for o, a in opts:
        if o in ("-h", "--help"):
            usage()
            sys.exit()
        elif o in ("-s", "--snaps"):
            snaps = a
        elif o in ("-a", "--amis"):
            amis = a
        elif o in ("-k", "--keep"):
            keep = int(a)
        elif o in ("-d"):
            dry_run = True
            print "Dry run specified.  Nothing will change."
        else:
            assert False, "unhandled option"

    if len(sys.argv) < 2:
        usage()
        sys.exit()

    connection=ec2.connect_to_region('us-east-1')
    snapshots=connection.get_all_snapshots(filters={'description':snaps})

    count = keep

    for snaps in snapshots:
        count-=1

        if count < 0:
            print "Deleting: " + snaps.id , "-" , snaps.start_time , "-" , snaps.volume_size , "\n"
            delete_snaps(snaps.id)

def delete_snaps(snapshot, dry_run=False):

    try:
        connection.delete_snapshot(snapshot, dry_run)
    except Exception as e:
        print "Tagging " + instanceId + " dry-run success."
    return

def usage():
    print '''
USAGE:

    clean snaps "jenkins"

'''

if __name__ == "__main__":
    main()
